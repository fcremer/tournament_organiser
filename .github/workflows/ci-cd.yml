
name: CI / CD

# Trigger für Pull-Requests und Pushes auf main
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  # 1) Test-Job
  test:
    name: API Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python 🔧
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Cache Dependencies 📦
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Flask API Smoke Tests 🧪
        # Erwartet, dass es unter tests/test_api.py einen einfachen pytest-Healthcheck gibt,
        # z.B. `assert client.get('/').status_code == 200`
        run: pytest --maxfail=1 --disable-warnings -q

  # 2) Build & Push-Job (nur auf main)
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to Docker Hub 🔐
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Image 🏗️
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/turnierverwaltung:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/turnierverwaltung:${{ github.sha }}

      - name: Notify Success 🎉
        run: echo "Image erfolgreich gebaut und gepusht."